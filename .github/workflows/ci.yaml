name: CI workflow

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - v*

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  DEFAULT_PYTHON: "3.11"

permissions: read-all

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.11"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel poetry
          poetry install --no-root

      - name: Run Tests
        run: poetry run pytest

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel poetry
          poetry install --no-root

      - name: Cache Pre-commit Environment
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      - name: Lint
        run: |
          poetry run pre-commit run --all-files
          poetry run mypy
